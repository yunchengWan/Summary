=====================================================
		ProgressBar

设置ProgressBar颜色
android:indeterminateTint="@color/color_xxx"
android:indeterminateTintMode="src_atop"

=====================================================

=====================================================

设置空间阴影（material design）
android:elevation="2dp" //阴影大小

=====================================================

=====================================================

NestScrollView嵌套RecyclerView在ConstractLayout中
使用时设置高度为wrap_content时最后一条Item显示不
全，需要指定高度即可

=====================================================

=====================================================

MaterialDesign水波纹实现
定义xml
<?xml version="1.0" encoding="utf-8"?>
<ripple xmlns:android="http://schemas.android.com/apk/res/android"
    android:color="#FF21272B">
    <item android:drawable="@drawable/ripple_bg_drawable" />
</ripple>
然后设置成background即可，需要控件能获得焦点（Or点击事件）

=====================================================

=====================================================

Dialog设置没有黑色背景
Style设置属性
<item name="android:backgroundDimEnabled">false</item>
<item name="android:windowBackground">@android:color/transparent</item>

=====================================================

=====================================================

Dialog设置全屏
view.setMinimumWidth(10000);
setContentView(view);

=====================================================

隐藏StatusBar

getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);

1.View.SYSTEM_UI_FLAG_VISIBLE ：状态栏和Activity共存，Activity不全屏显示。也就是应用平常的显示画面


2.View.SYSTEM_UI_FLAG_FULLSCREEN ：Activity全屏显示，且状态栏被覆盖掉


3.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN ：Activity全屏显示，但是状态栏不会被覆盖掉，而是正常显示，只是Activity顶端布局会被覆盖住


4.View.INVISIBLE ： Activity全屏显示，隐藏状态栏

=====================================================

scrollToPostion置顶

int position = mAdapter.getPositionOfIndex(index);
 LinearLayoutManager manager = (LinearLayoutManager) mCountryListRv.getLayoutManager();
 if (manager != null) {
     manager.scrollToPositionWithOffset(position, 0);
 }


=====================================================